1) Explain different sorting algorithms (Bubble Sort, Insertion Sort, Quick Sort, Merge Sort).

Ans) Bubble Sort
	Description: Bubble Sort repeatedly steps through the list, compares adjacent elements, and swaps them if they are in the wrong 	order. This process is repeated until the list is sorted.
	Time Complexity:
		Best Case: O(n) (when the list is already sorted)
		Average Case: O(n^2)
		Worst Case: O(n^2)
     Insertion Sort
	Description: Insertion Sort builds the final sorted array one item at a time. It picks the next item and scans backward to find 	its correct position, inserting it there.
	Time Complexity:
		Best Case: O(n) (when the list is already sorted)
		Average Case: O(n^2)
		Worst Case: O(n^2)
     Quick Sort
	Description: Quick Sort is a divide-and-conquer algorithm. It works by selecting a 'pivot' element and partitioning the array into 	two sub-arrays, according to whether they are less than or greater than the pivot. The sub-arrays are then sorted recursively.
	Time Complexity:
		Best Case: O(n log n)
		Average Case: O(n log n)
		Worst Case: O(n^2) (when the smallest or largest element is always chosen as the pivot)
     Merge Sort
	Description: Merge Sort is also a divide-and-conquer algorithm. It divides the array into two halves, recursively sorts them, and 	then merges the sorted halves.
	Time Complexity:
		Best Case: O(n log n)
		Average Case: O(n log n)
		Worst Case: O(n log n)

2) Compare the performance (time complexity) of Bubble Sort and Quick Sort.

Ans) Time Complexity
	Bubble Sort:
		Best Case: O(n) (when the array is already sorted)
		Average Case: O(n^2)
		Worst Case: O(n^2)
	Quick Sort:
		Best Case: O(n log n)
		Average Case: O(n log n)
		Worst Case: O(n^2) (when the pivot selection is poor)


3) Discuss why Quick Sort is generally preferred over Bubble Sort.

Ans)  Quick Sort is generally preferred over Bubble Sort because it has a much better average-case time complexity (O(n log n)) compared to Bubble Sortâ€™s (O(n^2)). Quick Sort is faster and more efficient for larger datasets, making it a better choice for sorting customer orders on an e-commerce platform.