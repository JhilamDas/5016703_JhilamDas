1) Explain linear search and binary search algorithms.

Ans) Linear Search Algorithm:
	Description: Linear search algorithm scans each element in the list sequentially until the target element is found or the end of the 	list is reached.
	Characteristics:
		Time Complexity: O(n) in the worst case.
		Use Case: Suitable for small, unsorted, or rarely searched datasets.
     Binary Search Algorithm:
	Description: Binary search algorithm repeatedly divides a sorted list in half to locate the target element.
	Characteristics:
		Time Complexity: O(log n) in the worst case.
		Use Case: Suitable for large, sorted datasets.

2) Compare the time complexity of linear and binary search.

Ans) Linear Search:
	Time Complexity: O(n)
	Reason: In the worst case, the search may need to scan through all n books.
     Binary Search:
	Time Complexity: O(log n)
	Reason: The search repeatedly divides the sorted list in half, reducing the search space logarithmically.

3) Discuss when to use each algorithm based on the data set size and order.

Ans) Linear Search: Suitable for small datasets or when the list is unsorted.
     Binary Search: Suitable for large, sorted datasets where fast search operations are required.