1) Explain the different types of linked lists (Singly Linked List, Doubly Linked List).

Ans) Singly Linked List:
	A singly linked list is a data structure consisting of nodes, where each node contains data and a reference (or link) to the next 	node in the sequence.
	Characteristics:
		1.Each node has two parts: data and a pointer to the next node.
		2.The last node's pointer points to null, indicating the end of the list.
     Doubly Linked List:
	A doubly linked list is similar to a singly linked list, but each node also contains a reference to the previous node.
	Characteristics:
		1.Each node has three parts: data, a pointer to the next node, and a pointer to the previous node.
		2.This allows traversal in both directions (forward and backward).

2) Analyze the time complexity of each operation.

Ans) Time Complexity of each operations are:
	Add Task:
		Time Complexity: O(n)
	Search Task:
		Time Complexity: O(n)
	Traverse Tasks:
		Time Complexity: O(n)
	Delete Task:
		Time Complexity: O(n)

3) Discuss the advantages of linked lists over arrays for dynamic data.

Ans) Advantages of Linked Lists over Arrays for Dynamic Data are:
	1.Dynamic Size: Linked lists can grow and shrink dynamically, unlike arrays which have a fixed size.
	2.Ease of Insertion/Deletion: Insertions and deletions are easier and more efficient in linked lists compared to arrays, 	especially when dealing with data in the middle of the list.
	3.Memory Usage: Linked lists can be more memory-efficient for certain applications because they don't require a predefined size.